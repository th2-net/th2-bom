plugins {
    id 'java-platform'
    id 'maven-publish'
    id "com.jfrog.bintray" version '1.8.5'
}

ext {
    sharedDir           = file('shared')

    cradleVersion       = '2.1.0'

    slf4jVersion        = '1.7.30'
    grpcVersion         = '1.32.1'
    protobufVersion     = '3.13.0'
    jacksonVersion      = '2.11.2'
    prometheusVersion   = '0.9.0'
}

group = 'com.exactpro.th2'
version = release_version

repositories {
    jcenter()
}

dependencies {
    constraints {
        // Libraries
        api('com.exactpro.th2:common:2.4.1')
        api('com.exactpro.th2:sailfish-utils:2.2.0')
        api('com.exactpro.th2:check1:2.2.0')
        api('com.exactpro.th2:check2:2.2.0')
        api('com.exactpro.th2:store-common:2.6.0')

        api("com.rabbitmq:amqp-client:5.9.0")
        api("com.datastax.cassandra:cassandra-driver-core:3.6.0")

        api("com.exactpro.th2:cradle-cassandra:${cradleVersion}")
        api("com.exactpro.th2:cradle-core:${cradleVersion}")

        api("com.fasterxml.jackson.core:jackson-core:${jacksonVersion}")
        api("com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}")
        api("com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}")
        api("com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${jacksonVersion}")
        api("com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:${jacksonVersion}")
        api("com.fasterxml.jackson.module:jackson-module-kotlin:${jacksonVersion}")

        api("org.jetbrains:annotations:20.0.0")

        api("org.apache.commons:commons-lang3:3.8.1")

        api("com.google.guava:guava:29.0-jre")

        api("com.google.protobuf:protobuf-java-util:${protobufVersion}")
        api("com.google.protobuf:protoc:${protobufVersion}")
        api("io.grpc:grpc-protobuf:${grpcVersion}")
        api("io.grpc:grpc-stub:${grpcVersion}")
        api("io.grpc:grpc-core:${grpcVersion}")
        api("io.grpc:grpc-netty:${grpcVersion}")
        api("io.grpc:protoc-gen-grpc-java:${grpcVersion}")

        api("org.slf4j:slf4j-api:${slf4jVersion}")
        api("org.slf4j:slf4j-log4j12:${slf4jVersion}")

        // Prometheus FIXME: remove when we have a facade in common
        api("io.prometheus:simpleclient:${prometheusVersion}")
        api("io.prometheus:simpleclient_hotspot:${prometheusVersion}")
        api("io.prometheus:simpleclient_httpserver:${prometheusVersion}")

        // gRPC libraries
        api('com.exactpro.th2:grpc-service-generator:2.0.5')

        api('com.exactpro.th2:grpc-common:2.3.0')
        api('com.exactpro.th2:grpc-util:2.3.0')
        api('com.exactpro.th2:grpc-check1:2.2.0')
        api('com.exactpro.th2:grpc-sim:2.2.0')
        api('com.exactpro.th2:grpc-hand:2.0.2')

        api('com.exactpro.th2:grpc-estore:2.0.15') // deprecated
    }
}

publishing {
    publishing {
        publications {
            th2Platform(MavenPublication) {
                from components.javaPlatform
            }
            bintrayPublication(MavenPublication) {
                from components.javaPlatform
                groupId group
                artifactId rootProject.name
                version project.version
                pom.withXml {
                    def root = asNode()
                    root.appendNode('name', rootProject.name)
                    root.appendNode('url', "${vcs_url}")
                }
            }
        }
    }

    repositories {
        repositories {
            maven {
                name = 'localRepo'
                url = sharedDir
            }
        }
    }
}

bintray {
    user = "${bintray_user}"
    key = "${bintray_key}"
    publications = ['bintrayPublication']
    pkg {
        repo = 'th2'
        name = rootProject.name
        userOrg = 'exactpro'
        licenses = ['Apache-2.0']
        vcsUrl = "${vcs_url}"
        version {
            name = project.version
            desc = project.version
            released  = new Date()
        }
    }
    publish = true
}
